!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
contains	main.go	/^func contains (search string, slice []string) bool {$/;"	f	package:main	typeref:typename:bool
contains	test.go	/^func contains (search string, slice []string) bool {$/;"	f	package:main	typeref:typename:bool
getRandKeys	main.go	/^func getRandKeys (questions map[string][]string) []string {$/;"	f	package:main	typeref:typename:[]string
help	main.go	/^func help (name string) {$/;"	f	package:main
main	main.go	/^func main() {$/;"	f	package:main
main	main.go	/^package main$/;"	p
main	test.go	/^func main () {$/;"	f	package:main
main	test.go	/^package main$/;"	p
runQuiz	main.go	/^func runQuiz () {$/;"	f	package:main
test	main.go	/^func test () bool {$/;"	f	package:main	typeref:typename:bool
test1	main.go	/^func test1 () bool {$/;"	f	package:main	typeref:typename:bool
unkownArg	main.go	/^func unkownArg (arg string) {$/;"	f	package:main
version	main.go	/^func version () {$/;"	f	package:main
