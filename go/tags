!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
Combine	utils/utils.go	/^func Combine(map1 map[string][]string, map2 map[string][]string) map[string][]string {$/;"	f	package:utils	typeref:typename:map[string][]string
Contains	utils/utils.go	/^func Contains(slice []string, search string) bool {$/;"	f	package:utils	typeref:typename:bool
GetRandKeys	utils/utils.go	/^func GetRandKeys(questions map[string][]string) []string {$/;"	f	package:utils	typeref:typename:[]string
GetSubjects	utils/utils.go	/^func GetSubjects(questions questions.QuestionsTemplate) []map[string][]string {$/;"	f	package:utils	typeref:typename:[]map[string][]string
Help	utils/utils.go	/^func Help(name string) {$/;"	f	package:utils
UnkownArg	utils/utils.go	/^func UnkownArg(arg string) {$/;"	f	package:utils
Version	utils/utils.go	/^func Version() {$/;"	f	package:utils
utils	utils/utils.go	/^package utils$/;"	p
